buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'java-test-fixtures'
	id 'java-library'
	id 'maven-publish'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.rissins'
version = '0.0.1'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// aws s3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.159'
	implementation 'com.amazonaws:aws-java-sdk-secretsmanager:1.12.150'
	implementation 'com.amazonaws:aws-encryption-sdk-java:2.3.3'

	// https://mvnrepository.com/artifact/org.springframework.data/spring-data-redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2'


	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'

	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	//fixtures
	testFixturesImplementation 'org.springframework.boot:spring-boot-starter-web'
	testFixturesImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}